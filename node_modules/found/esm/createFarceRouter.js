import _inheritsLoose from "@babel/runtime-corejs3/helpers/esm/inheritsLoose";
import _objectWithoutPropertiesLoose from "@babel/runtime-corejs3/helpers/esm/objectWithoutPropertiesLoose";
import FarceActions from 'farce/Actions';
import React from 'react';
import { Provider } from 'react-redux';
import createConnectedRouter from './createConnectedRouter';
import createFarceStore from './createFarceStore';
export default function createFarceRouter(_ref) {
  var store = _ref.store,
      historyProtocol = _ref.historyProtocol,
      historyMiddlewares = _ref.historyMiddlewares,
      historyOptions = _ref.historyOptions,
      routeConfig = _ref.routeConfig,
      options = _objectWithoutPropertiesLoose(_ref, ["store", "historyProtocol", "historyMiddlewares", "historyOptions", "routeConfig"]);

  var ConnectedRouter = createConnectedRouter(options);

  var FarceRouter = /*#__PURE__*/function (_React$Component) {
    _inheritsLoose(FarceRouter, _React$Component);

    function FarceRouter(props) {
      var _this;

      _this = _React$Component.call(this, props) || this;
      _this.store = store || createFarceStore({
        historyProtocol: historyProtocol,
        historyMiddlewares: historyMiddlewares,
        historyOptions: historyOptions,
        routeConfig: routeConfig
      });
      return _this;
    }

    var _proto = FarceRouter.prototype;

    _proto.componentWillUnmount = function componentWillUnmount() {
      this.store.dispatch(FarceActions.dispose());
    };

    _proto.render = function render() {
      return /*#__PURE__*/React.createElement(Provider, {
        store: this.store
      }, /*#__PURE__*/React.createElement(ConnectedRouter, this.props));
    };

    return FarceRouter;
  }(React.Component);

  return FarceRouter;
}