import _objectWithoutPropertiesLoose from "@babel/runtime-corejs3/helpers/esm/objectWithoutPropertiesLoose";
import { connect } from 'react-redux';
import ActionTypes from './ActionTypes';
import createBaseRouter from './createBaseRouter';

function resolveMatch(match) {
  return {
    type: ActionTypes.RESOLVE_MATCH,
    payload: match
  };
}

export default function createConnectedRouter(_ref) {
  var _ref$getFound = _ref.getFound,
      getFound = _ref$getFound === void 0 ? function (_ref2) {
    var found = _ref2.found;
    return found;
  } : _ref$getFound,
      options = _objectWithoutPropertiesLoose(_ref, ["getFound"]);

  return connect(function (state) {
    var _getFound = getFound(state),
        match = _getFound.match,
        resolvedMatch = _getFound.resolvedMatch;

    return {
      match: match,
      resolvedMatch: resolvedMatch
    };
  }, {
    onResolveMatch: resolveMatch
  }, null, {
    // Don't block context propagation from above. The router should seldom
    // be unnecessarily rerendering anyway.
    pure: false,
    getDisplayName: function getDisplayName() {
      return 'ConnectedRouter';
    }
  })(createBaseRouter(options));
}