import _extends from "@babel/runtime-corejs3/helpers/esm/extends";
import FarceActions from 'farce/Actions';
import createHistoryEnhancer from 'farce/createHistoryEnhancer';
import queryMiddleware from 'farce/queryMiddleware';
import { combineReducers, compose, createStore } from 'redux';
import Matcher from './Matcher';
import createMatchEnhancer from './createMatchEnhancer';
import foundReducer from './foundReducer';
export default function createFarceStore(_ref) {
  var historyProtocol = _ref.historyProtocol,
      historyMiddlewares = _ref.historyMiddlewares,
      historyOptions = _ref.historyOptions,
      routeConfig = _ref.routeConfig;
  var store = createStore(combineReducers({
    found: foundReducer
  }), compose(createHistoryEnhancer(_extends({}, historyOptions, {
    protocol: historyProtocol,
    middlewares: historyMiddlewares || [queryMiddleware]
  })), createMatchEnhancer(new Matcher(routeConfig))));
  store.dispatch(FarceActions.init());
  return store;
}