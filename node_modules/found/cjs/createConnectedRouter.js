"use strict";

var _interopRequireDefault = require("@babel/runtime-corejs3/helpers/interopRequireDefault");

exports.__esModule = true;
exports["default"] = createConnectedRouter;

var _objectWithoutPropertiesLoose2 = _interopRequireDefault(require("@babel/runtime-corejs3/helpers/objectWithoutPropertiesLoose"));

var _reactRedux = require("react-redux");

var _ActionTypes = _interopRequireDefault(require("./ActionTypes"));

var _createBaseRouter = _interopRequireDefault(require("./createBaseRouter"));

function resolveMatch(match) {
  return {
    type: _ActionTypes["default"].RESOLVE_MATCH,
    payload: match
  };
}

function createConnectedRouter(_ref) {
  var _ref$getFound = _ref.getFound,
      getFound = _ref$getFound === void 0 ? function (_ref2) {
    var found = _ref2.found;
    return found;
  } : _ref$getFound,
      options = (0, _objectWithoutPropertiesLoose2["default"])(_ref, ["getFound"]);
  return (0, _reactRedux.connect)(function (state) {
    var _getFound = getFound(state),
        match = _getFound.match,
        resolvedMatch = _getFound.resolvedMatch;

    return {
      match: match,
      resolvedMatch: resolvedMatch
    };
  }, {
    onResolveMatch: resolveMatch
  }, null, {
    // Don't block context propagation from above. The router should seldom
    // be unnecessarily rerendering anyway.
    pure: false,
    getDisplayName: function getDisplayName() {
      return 'ConnectedRouter';
    }
  })((0, _createBaseRouter["default"])(options));
}

module.exports = exports.default;