"use strict";

var _interopRequireDefault = require("@babel/runtime-corejs3/helpers/interopRequireDefault");

exports.__esModule = true;
exports["default"] = createInitialFarceRouter;

var _regenerator = _interopRequireDefault(require("@babel/runtime-corejs3/regenerator"));

var _extends2 = _interopRequireDefault(require("@babel/runtime-corejs3/helpers/extends"));

var _objectWithoutPropertiesLoose2 = _interopRequireDefault(require("@babel/runtime-corejs3/helpers/objectWithoutPropertiesLoose"));

var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime-corejs3/helpers/asyncToGenerator"));

var _createFarceRouter = _interopRequireDefault(require("./createFarceRouter"));

var _createFarceStore = _interopRequireDefault(require("./createFarceStore"));

var _getStoreRenderArgs = _interopRequireDefault(require("./getStoreRenderArgs"));

function createInitialFarceRouter(_x) {
  return _createInitialFarceRouter.apply(this, arguments);
}

function _createInitialFarceRouter() {
  _createInitialFarceRouter = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee(_ref) {
    var historyProtocol, historyMiddlewares, historyOptions, routeConfig, matchContext, resolver, options, store, FarceRouter, initialRenderArgs;
    return _regenerator["default"].wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            historyProtocol = _ref.historyProtocol, historyMiddlewares = _ref.historyMiddlewares, historyOptions = _ref.historyOptions, routeConfig = _ref.routeConfig, matchContext = _ref.matchContext, resolver = _ref.resolver, options = (0, _objectWithoutPropertiesLoose2["default"])(_ref, ["historyProtocol", "historyMiddlewares", "historyOptions", "routeConfig", "matchContext", "resolver"]);
            store = (0, _createFarceStore["default"])({
              historyProtocol: historyProtocol,
              historyMiddlewares: historyMiddlewares,
              historyOptions: historyOptions,
              routeConfig: routeConfig
            });
            FarceRouter = (0, _createFarceRouter["default"])((0, _extends2["default"])({}, options, {
              store: store
            })); // This intentionally doesn't handle RedirectExceptions, because those
            // shouldn't happen here anyway.

            _context.next = 5;
            return (0, _getStoreRenderArgs["default"])({
              store: store,
              matchContext: matchContext,
              resolver: resolver
            });

          case 5:
            initialRenderArgs = _context.sent;
            // We own this FarceRouter, so it's safe to replace its default props.
            FarceRouter.defaultProps = (0, _extends2["default"])({}, FarceRouter.defaultProps, {
              matchContext: matchContext,
              resolver: resolver,
              initialRenderArgs: initialRenderArgs
            });
            return _context.abrupt("return", FarceRouter);

          case 8:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  }));
  return _createInitialFarceRouter.apply(this, arguments);
}

module.exports = exports.default;