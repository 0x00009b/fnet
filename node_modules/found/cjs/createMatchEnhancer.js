"use strict";

var _interopRequireDefault = require("@babel/runtime-corejs3/helpers/interopRequireDefault");

exports.__esModule = true;
exports["default"] = createMatchEnhancer;

var _extends2 = _interopRequireDefault(require("@babel/runtime-corejs3/helpers/extends"));

var _ActionTypes = _interopRequireDefault(require("farce/ActionTypes"));

var _redux = require("redux");

var _ActionTypes2 = _interopRequireDefault(require("./ActionTypes"));

function createMatchMiddleware(matcher) {
  return function matchMiddleware() {
    return function (next) {
      return function (action) {
        var type = action.type,
            payload = action.payload;

        if (type !== _ActionTypes["default"].UPDATE_LOCATION) {
          return next(action);
        }

        return next({
          type: _ActionTypes2["default"].UPDATE_MATCH,
          payload: (0, _extends2["default"])({
            location: payload
          }, matcher.match(payload))
        });
      };
    };
  };
}

function createMatchEnhancer(matcher, getFound) {
  if (getFound === void 0) {
    getFound = function getFound(_ref) {
      var found = _ref.found;
      return found;
    };
  }

  return function matchEnhancer(createStore) {
    return function () {
      var middlewareEnhancer = (0, _redux.applyMiddleware)(createMatchMiddleware(matcher));
      var store = middlewareEnhancer(createStore).apply(void 0, arguments);

      function replaceRouteConfig(routeConfig) {
        matcher.replaceRouteConfig(routeConfig);
        store.dispatch({
          type: _ActionTypes["default"].UPDATE_LOCATION,
          payload: getFound(store.getState()).match.location
        });
      }

      return (0, _extends2["default"])({}, store, {
        found: {
          matcher: matcher,
          replaceRouteConfig: replaceRouteConfig
        }
      });
    };
  };
}

module.exports = exports.default;