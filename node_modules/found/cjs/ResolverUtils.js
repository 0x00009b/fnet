"use strict";

var _interopRequireDefault = require("@babel/runtime-corejs3/helpers/interopRequireDefault");

exports.__esModule = true;
exports.checkResolved = checkResolved;
exports.isResolved = isResolved;
exports.accumulateRouteValues = accumulateRouteValues;
exports.getRouteMatches = getRouteMatches;
exports.getRouteValue = getRouteValue;
exports.getRouteValues = getRouteValues;
exports.getComponents = getComponents;

var _bind = _interopRequireDefault(require("@babel/runtime-corejs3/core-js-stable/instance/bind"));

var _getIterator2 = _interopRequireDefault(require("@babel/runtime-corejs3/core-js/get-iterator"));

var _isArray = _interopRequireDefault(require("@babel/runtime-corejs3/core-js-stable/array/is-array"));

var _getIteratorMethod2 = _interopRequireDefault(require("@babel/runtime-corejs3/core-js/get-iterator-method"));

var _symbol = _interopRequireDefault(require("@babel/runtime-corejs3/core-js-stable/symbol"));

var _from = _interopRequireDefault(require("@babel/runtime-corejs3/core-js-stable/array/from"));

var _slice = _interopRequireDefault(require("@babel/runtime-corejs3/core-js-stable/instance/slice"));

var _extends2 = _interopRequireDefault(require("@babel/runtime-corejs3/helpers/extends"));

var _map = _interopRequireDefault(require("@babel/runtime-corejs3/core-js-stable/instance/map"));

var _concat = _interopRequireDefault(require("@babel/runtime-corejs3/core-js-stable/instance/concat"));

var _values = _interopRequireDefault(require("@babel/runtime-corejs3/core-js-stable/object/values"));

var _forEach = _interopRequireDefault(require("@babel/runtime-corejs3/core-js-stable/instance/for-each"));

var _setImmediate2 = _interopRequireDefault(require("@babel/runtime-corejs3/core-js-stable/set-immediate"));

var _promise = _interopRequireDefault(require("@babel/runtime-corejs3/core-js-stable/promise"));

var _isPromise = _interopRequireDefault(require("is-promise"));

var _warning = _interopRequireDefault(require("warning"));

function _createForOfIteratorHelperLoose(o, allowArrayLike) { var _context5; var it; if (typeof _symbol["default"] === "undefined" || (0, _getIteratorMethod2["default"])(o) == null) { if ((0, _isArray["default"])(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } it = (0, _getIterator2["default"])(o); return (0, _bind["default"])(_context5 = it.next).call(_context5, it); }

function _unsupportedIterableToArray(o, minLen) { var _context4; if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = (0, _slice["default"])(_context4 = Object.prototype.toString.call(o)).call(_context4, 8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return (0, _from["default"])(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

var UNRESOLVED = {};

function checkResolved(value) {
  if (!(0, _isPromise["default"])(value)) {
    return value;
  }

  return _promise["default"].race([value, new _promise["default"](function (resolve) {
    (0, _setImmediate2["default"])(resolve, UNRESOLVED);
  })]);
}

function isResolved(value) {
  return value !== UNRESOLVED;
}

function accumulateRouteValuesImpl(routeValues, routeIndices, callback, initialValue) {
  var accumulated = [];
  var value = initialValue;

  for (var _iterator = _createForOfIteratorHelperLoose(routeIndices), _step; !(_step = _iterator()).done;) {
    var routeIndex = _step.value;

    if (typeof routeIndex === 'object') {
      var _context;

      // eslint-disable-next-line no-loop-func
      (0, _forEach["default"])(_context = (0, _values["default"])(routeIndex)).call(_context, function (groupRouteIndices) {
        accumulated.push.apply(accumulated, accumulateRouteValuesImpl(routeValues, groupRouteIndices, callback, value));
      });
    } else {
      value = callback(value, routeValues.shift());
      accumulated.push(value);
    }
  }

  return accumulated;
}

function accumulateRouteValues(routeValues, routeIndices, callback, initialValue) {
  var _context2;

  return accumulateRouteValuesImpl((0, _concat["default"])(_context2 = []).call(_context2, routeValues), routeIndices, callback, initialValue);
}

function getRouteMatches(match) {
  var _context3;

  return (0, _map["default"])(_context3 = match.routes).call(_context3, function (route, i) {
    return (0, _extends2["default"])({}, match, {
      route: route,
      routeParams: match.routeParams[i]
    });
  });
}

function getRouteValue(match, getGetter, getValue) {
  var route = match.route;
  var getter = getGetter(route);
  return getter ? getter.call(route, match) : getValue(route);
} // This is a little more versatile than if we only passed in keys.


function getRouteValues(routeMatches, getGetter, getValue) {
  return (0, _map["default"])(routeMatches).call(routeMatches, function (match) {
    return getRouteValue(match, getGetter, getValue);
  });
}

function getRouteGetComponent(route) {
  return route.getComponent;
}

function getRouteComponent(route) {
  if (process.env.NODE_ENV !== "production" && route.component) {
    process.env.NODE_ENV !== "production" ? (0, _warning["default"])(route.Component, 'Route with `component` property `%s` has no `Component` property. The expected property for the route component is `Component`.', route.component.displayName || route.component.name) : void 0;
  }

  return route.Component;
} // This should be common to most resolvers, so make it available here.


function getComponents(routeMatches) {
  return getRouteValues(routeMatches, getRouteGetComponent, getRouteComponent);
}