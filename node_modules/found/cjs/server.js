"use strict";

var _interopRequireDefault = require("@babel/runtime-corejs3/helpers/interopRequireDefault");

exports.__esModule = true;
exports.RouterProvider = RouterProvider;
exports.getFarceResult = getFarceResult;

var _regenerator = _interopRequireDefault(require("@babel/runtime-corejs3/regenerator"));

var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime-corejs3/helpers/asyncToGenerator"));

var _Actions = _interopRequireDefault(require("farce/Actions"));

var _ServerProtocol = _interopRequireDefault(require("farce/ServerProtocol"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireDefault(require("react"));

var _PropTypes = require("./PropTypes");

var _RouterContext = _interopRequireDefault(require("./RouterContext"));

var _createFarceStore = _interopRequireDefault(require("./createFarceStore"));

var _createRender = _interopRequireDefault(require("./createRender"));

var _getStoreRenderArgs = _interopRequireDefault(require("./getStoreRenderArgs"));

var _resolver = _interopRequireDefault(require("./resolver"));

var propTypes = {
  renderArgs: _propTypes["default"].shape({
    router: _PropTypes.routerShape.isRequired
  }).isRequired,
  children: _propTypes["default"].node
};

function RouterProvider(_ref) {
  var renderArgs = _ref.renderArgs,
      children = _ref.children;
  return /*#__PURE__*/_react["default"].createElement(_RouterContext["default"].Provider, {
    value: {
      router: renderArgs.router,
      match: renderArgs
    }
  }, children);
}

RouterProvider.propTypes = propTypes;

function getFarceResult(_x) {
  return _getFarceResult.apply(this, arguments);
}

function _getFarceResult() {
  _getFarceResult = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee(_ref2) {
    var url, historyMiddlewares, historyOptions, routeConfig, matchContext, _ref2$resolver, resolver, renderPending, renderReady, renderError, _ref2$render, render, store, renderArgs;

    return _regenerator["default"].wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            url = _ref2.url, historyMiddlewares = _ref2.historyMiddlewares, historyOptions = _ref2.historyOptions, routeConfig = _ref2.routeConfig, matchContext = _ref2.matchContext, _ref2$resolver = _ref2.resolver, resolver = _ref2$resolver === void 0 ? _resolver["default"] : _ref2$resolver, renderPending = _ref2.renderPending, renderReady = _ref2.renderReady, renderError = _ref2.renderError, _ref2$render = _ref2.render, render = _ref2$render === void 0 ? (0, _createRender["default"])({
              renderPending: renderPending,
              renderReady: renderReady,
              renderError: renderError
            }) : _ref2$render;
            store = (0, _createFarceStore["default"])({
              historyProtocol: new _ServerProtocol["default"](url),
              historyMiddlewares: historyMiddlewares,
              historyOptions: historyOptions,
              routeConfig: routeConfig
            });
            _context.prev = 2;
            _context.next = 5;
            return (0, _getStoreRenderArgs["default"])({
              store: store,
              matchContext: matchContext,
              resolver: resolver
            });

          case 5:
            renderArgs = _context.sent;
            _context.next = 13;
            break;

          case 8:
            _context.prev = 8;
            _context.t0 = _context["catch"](2);

            if (!_context.t0.isFoundRedirectException) {
              _context.next = 12;
              break;
            }

            return _context.abrupt("return", {
              status: _context.t0.status,
              redirect: {
                url: store.farce.createHref(_context.t0.location)
              }
            });

          case 12:
            throw _context.t0;

          case 13:
            _context.prev = 13;
            // This is a no-op with ServerProtocol, but it doesn't hurt.
            store.dispatch(_Actions["default"].dispose());
            return _context.finish(13);

          case 16:
            return _context.abrupt("return", {
              status: renderArgs.error ? renderArgs.error.status : 200,
              element: /*#__PURE__*/_react["default"].createElement(RouterProvider, {
                renderArgs: renderArgs
              }, render(renderArgs))
            });

          case 17:
          case "end":
            return _context.stop();
        }
      }
    }, _callee, null, [[2, 8, 13, 16]]);
  }));
  return _getFarceResult.apply(this, arguments);
}