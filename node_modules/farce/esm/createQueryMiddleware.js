function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import createLocationMiddleware from './createLocationMiddleware';
export default function createQueryMiddleware(_ref) {
  var parse = _ref.parse,
      stringify = _ref.stringify;
  return createLocationMiddleware({
    makeLocationDescriptor: function makeLocationDescriptor(location) {
      var query = location.query;

      if (query === undefined) {
        return location;
      }

      var queryString = stringify(query);
      var search = queryString ? "?" + queryString : '';
      return _extends({}, location, {
        search: search
      });
    },
    makeLocation: function makeLocation(location) {
      if (location.query !== undefined) {
        return location;
      }

      var query;

      try {
        query = parse(location.search.slice(1));
      } catch (e) {
        query = null;
      }

      return _extends({}, location, {
        query: query
      });
    }
  });
}