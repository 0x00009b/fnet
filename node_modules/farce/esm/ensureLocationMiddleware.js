function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import ActionTypes from './ActionTypes';
import ensureLocation from './ensureLocation';
export default function ensureLocationMiddleware() {
  return function (next) {
    return function (action) {
      var type = action.type,
          payload = action.payload;

      switch (type) {
        case ActionTypes.PUSH:
          return next({
            type: ActionTypes.NAVIGATE,
            payload: _extends({}, ensureLocation(payload), {
              action: 'PUSH'
            })
          });

        case ActionTypes.REPLACE:
          return next({
            type: ActionTypes.NAVIGATE,
            payload: _extends({}, ensureLocation(payload), {
              action: 'REPLACE'
            })
          });

        case ActionTypes.CREATE_HREF:
        case ActionTypes.CREATE_LOCATION:
          return next({
            type: type,
            payload: ensureLocation(payload)
          });

        default:
          return next(action);
      }
    };
  };
}